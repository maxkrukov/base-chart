# Default values for base-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1  # Number of replicas for the deployment. Example: Set to 3 for a highly available service.

recreatePods: false  # Should pods be recreated when the deployment is updated? Example: Set to true for changes requiring a full restart of all pods.

statefulset:
  enabled: false  # Set to true to use a StatefulSet instead of Deployment.
  # podManagementPolicy could be:
  # Parallel: Pods are created and deleted in parallel (fast).
  # OrderedReady: Pods are created and deleted in order.
  podManagementPolicy: Parallel  # Example: Use OrderedReady for strict ordering of pod startups.
  updateStrategy:
    # The spec.updateStrategy.type field accepts either 
    # OnDelete or RollingUpdate as values.
    type: RollingUpdate  # Example: Set to OnDelete for manual updates.
    rollingUpdate:
      partition: 0  # Example: Set to 1 to update pods incrementally, leaving one pod out.
  volumeClaimTemplates:
    enabled: false  # Set to true to enable persistent storage for StatefulSet.
    templates:
      - name: sts-data
        accessModes:
          - ReadWriteOnce  # Example: Use ReadWriteMany for shared access across pods.
        storageClassName: ""  # Specify storage class if necessary. Example: Use "gp2" for AWS.
        storage: 1Gi  # Example: Increase to 10Gi for applications requiring larger storage.
        mountPath: /mnt/www  # Example: Mount data at /data for specific applications.

image:
  repository: nginx  # Default container image to use. Example: Use a custom application image.
  pullPolicy: IfNotPresent  # Example: Set to Always to always pull the latest image.
  tag: "latest"  # Example: Set to a specific version like "1.19.6" for consistency across environments.

imagePullSecrets: []  # Example: Provide secrets for pulling private images from a registry.
# - name: my-private-registry-secret

nameOverride: ""  # Example: Override the chart name for multi-environment setups like "myapp-staging".
fullnameOverride: ""  # Example: Use a custom full name, such as "myapp-prod".

command: []  # Example: ["nginx", "-g", "daemon off;"] to run specific commands inside the container.
args: []  # Example: ["-c", "/etc/nginx/nginx.conf"] to pass specific arguments.

JAVA_OPTS: []  # Provide custom Java options for Java-based applications.
# Example:
#   - "-Xmx1024m"
#   - "-Xms512m"

JMX_OPTS: []  # Provide custom JMX options. Example:
#   - "-Dcom.sun.management.jmxremote"
#   - "-Dcom.sun.management.jmxremote.port=1099"

wrapped_env:
  enabled: false  # Set to true to load environment variables from a Secret or ConfigMap.
  type: Secret  # Example: Use ConfigMap to load non-sensitive values.
  data: {}
    # MYSQL_PASS: "mysql-password"  # Example: Use for sensitive passwords.
    # PSQL_PASS: "psql-password"

env: {}  # Define environment variables for the container.
# Example:
# MYSQL_HOST: "mysql:3306"
# KAFKA_HOST: "kafka:9092"

environment: []  # Define more advanced environment variable configurations.
# Example:
#  - name: MY_NODE_NAME
#    valueFrom:
#      fieldRef:
#        fieldPath: spec.nodeName
#  - name: PROPERTIES_FILE_NAME
#    valueFrom:
#      configMapKeyRef:
#        name: some-configmap
#        key: properties_file_name

envFrom: []  # Example: Load environment variables from ConfigMaps or Secrets.
#  - secretRef:
#      name: my-secret
#  - configMapRef:
#      name: my-config

terminationGracePeriodSeconds: 30  # Example: Increase to 60 seconds if your app needs more time for graceful shutdown.

lifecycle: {}  # Define hooks for container lifecycle events.
# Example preStop hook to handle graceful shutdown:
# lifecycle:
#   preStop:
#     exec:
#       command: ["/bin/sh", "-c", "sleep 30"]

startupProbe: {}  # Example startup probe for checking if the app is ready to start.
# startupProbe:
#   httpGet:
#     path: /healthz
#     port: 8080
#   failureThreshold: 10
#   periodSeconds: 5

livenessProbe: {}  # Example liveness probe to check if the container is healthy.
# livenessProbe:
#   httpGet:
#     path: /healthz
#     port: 8080
#   initialDelaySeconds: 30
#   timeoutSeconds: 5

readinessProbe: {}  # Example readiness probe to check if the container is ready to serve traffic.
# readinessProbe:
#   httpGet:
#     path: /ready
#     port: 8080

serviceAccount:
  create: true  # Example: Set to false if using an existing service account.
  annotations: {}  # Example: Add annotations for IAM roles in EKS.
  name: ""  # Example: Use a custom service account name, such as "myapp-serviceaccount".

podAnnotations: {}  # Example: Add annotations for monitoring or tracing.
# prometheus.io/scrape: "true"
# prometheus.io/port: "8080"

podSecurityContext: {}  # Example: Set security context for the entire pod.
# Example:
# fsGroup: 2000

securityContext: {}  # Example: Define security context for containers.
# Example:
# runAsUser: 1000
# readOnlyRootFilesystem: true

service:
  type: ClusterIP  # Example: Change to LoadBalancer for external services.
  services:
  - name: http
    targetPort: 80  # Example: Change to 8080 for different application ports.
    port: 80
    protocol: TCP  # Example: Use UDP if needed.
    # nodePort: 31111  # Example: Specify a NodePort for direct access.

ingress:
  enabled: false  # Set to true to enable ingress.
  className: ""  # Example: Set to "nginx" for NGINX Ingress Controller.
  annotations: {}
    # kubernetes.io/ingress.class: nginx  # Example: Use NGINX as the ingress controller.
    # cert-manager.io/cluster-issuer: letsencrypt-prod  # Example: Enable automatic TLS certificate provisioning.
  hosts:
    - host: chart-example01.local
      paths:
      - path: "/"
        pathType: ImplementationSpecific
        # serviceName: custom-service
        servicePort: "80"

  tls: []  # Example: Configure TLS for secure traffic.
  #  - secretName: tls-secret
  #    hosts:
  #      - chart-example01.local

resources: {}  # Define resource requests and limits for containers.
  # Example configuration:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


# initContainers and sidecars could be templates and use values params
initContainers: ""  # Example: Define init containers for database migrations or pre-startup tasks.
sidecars: ""  # Example: Define sidecar containers like logging or monitoring agents.
# Example:
# sidecars: |-
#   - name: logging
#     image: fluentd:latest
#   - name: watcher
#     image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"

autoscaling:
  enabled: false  # Set to true to enable autoscaling.
  minReplicas: 1  # Example: Adjust for scaling down to a single instance.
  maxReplicas: 10  # Example: Increase for higher availability.
  targetCPUUtilizationPercentage: 80  # Example: Adjust CPU threshold for scaling.
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}  # Example: Use node labels to schedule pods on specific nodes.
# Example:
# nodeSelector:
#   disktype: ssd

tolerations: []  # Example: Define tolerations to schedule pods on tainted nodes.
# Example:
# tolerations:
# - key: "key"
#   operator: "Equal"
#   value: "value"
#   effect: "NoSchedule"

affinity: {}  # Example: Define affinity rules to control pod placement.
# Example:
# affinity:
#   nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#         - matchExpressions:
#             - key: kubernetes.io/e2e-az-name
#               operator: In
#               values:
#                 - e2e-az1

volumeMounts: []  # Example: Define additional volume mounts for logs or config files.
# Example:
#  - mountPath: /etc/timezone
#    name: volume-name
#    subPath: timezone

# Can load files from chart dir: config
fileLoad:
  enabled: false  # Example: Set to true to enable file loading.
  mountPath: /app/config  # Example: Define the directory to load files into the container.

servicemonitor:
  enabled: false  # Example: Set to true to integrate with Prometheus ServiceMonitor.
  # Example configuration:
  # prometheus:
  #   namespace: monitoring
  #   labels:
  #     release: kube-prometheus-stack
  #     app: kube-prometheus-stack
  #   port: metrics
  #   path: /metrics
  #   interval: 10s

prometheusrule:
  enabled: false  # Example: Enable Prometheus alerting rules.
  # Example:
  # prometheus:
  #   namespace: monitoring
  #   labels:
  #     release: kube-prometheus-stack
  #     app: kube-prometheus-stack
  #   groups:
  #     - name: base-chart
  #       rules:
  #         - alert: HighCPUUsage
  #           expr: sum(rate(container_cpu_usage_seconds_total[1m])) > 0.5
  #           for: 1m
  #           labels:
  #             severity: warning
  #           annotations:
  #             description: CPU usage is above threshold.
  #             summary: High CPU usage detected.

files: []  # Example: Define files to mount inside the container.
# Example:
# files:
#   - mountPath: /etc/timezone
#     data:
#       timezone: "Europe/Kiev"

binaryFiles: []  # Example: Define binary files to mount.
# Example:
# binaryFiles:
#   - mountPath: /etc/localtime
#     data:
#       localtime: "binary data here... (base64 string)"
